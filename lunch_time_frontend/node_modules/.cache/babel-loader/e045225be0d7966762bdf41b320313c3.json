{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport restaurantRegister from \"../RestaurantRegisterPage\";\nimport { BrowserRouter as useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\"); // const [accountType, setAccountType] = useState(\"\");\n\n  let history = useHistory();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  } // function client_onClick() {\n  //   setAccountType(\"client\");\n  // }\n  // function restaurant_onClick() {\n  //   setAccountType(\"restaurant\");\n  // }\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    if (accountType === \"client\") {\n      console.log(\"CLIENT_BUTTON\");\n      fetch(\"http://localhost:4000/accounts/register/user\", {\n        method: \"POST\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // body data type must match \"Content-Type\" header\n\n      }).then(response => response.json()) //   {console.log(response.status);\n      //   if (response.status === \"201\") {\n      //     history.push(\"/RestaurantRegisterPage\");\n      //   }\n      // })\n      .then(json => console.log(\"json\", json)).catch(err => console.log(\"err\", err));\n    } // } else {\n    //   fetch(\"http://localhost:4000/accounts/register/restaurant\", {\n    //     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    //     mode: \"cors\",\n    //     cache: \"no-cache\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n    //   })\n    //     .then((response) => {\n    //       response.json();\n    //       console.log(response.status);\n    //       if (response.status === 201) {\n    //         history.push(\"restaurantRegister\");\n    //       }\n    //     })\n    //     .then((json) => console.log(\"json\", json))\n    //     .catch((err) => console.log(\"err\", err));\n    // }\n\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\") setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: client_onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Register as client\")));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js"],"names":["React","useState","styles","restaurantRegister","BrowserRouter","useHistory","TextField","FormHelperText","Button","FormGroup","FormControl","ControlLabel","ClientRegister","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","history","validateForm","length","handleSubmit","event","preventDefault","console","log","target","name","accountType","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","catch","err","handleChange","value","Register","root","CustomInput","client_onClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport restaurantRegister from \"../RestaurantRegisterPage\";\nimport { BrowserRouter as useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // const [accountType, setAccountType] = useState(\"\");\n  let history = useHistory();\n\n  function validateForm() {\n    return (\n      email.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm === passwordConfirm\n    );\n  }\n\n  // function client_onClick() {\n  //   setAccountType(\"client\");\n  // }\n  // function restaurant_onClick() {\n  //   setAccountType(\"restaurant\");\n  // }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    if (accountType === \"client\") {\n      console.log(\"CLIENT_BUTTON\");\n      fetch(\"http://localhost:4000/accounts/register/user\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => response.json())\n        //   {console.log(response.status);\n        //   if (response.status === \"201\") {\n        //     history.push(\"/RestaurantRegisterPage\");\n        //   }\n        // })\n        .then((json) => console.log(\"json\", json))\n        .catch((err) => console.log(\"err\", err));\n    }\n    // } else {\n    //   fetch(\"http://localhost:4000/accounts/register/restaurant\", {\n    //     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    //     mode: \"cors\",\n    //     cache: \"no-cache\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n    //   })\n    //     .then((response) => {\n    //       response.json();\n    //       console.log(response.status);\n    //       if (response.status === 201) {\n    //         history.push(\"restaurantRegister\");\n    //       }\n    //     })\n    //     .then((json) => console.log(\"json\", json))\n    //     .catch((err) => console.log(\"err\", err));\n\n    // }\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\")\n      setPasswordConfirm(event.target.value);\n  };\n\n  return (\n    <div className={styles.Register}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password_confirm\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n        <Button type=\"submit\" onClick={client_onClick}>\n          Register as client\n        </Button>\n        {/* <Button type=\"submit\" onClick={restaurant_onClick}>\n          Register as restaurant\n        </Button> */}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}