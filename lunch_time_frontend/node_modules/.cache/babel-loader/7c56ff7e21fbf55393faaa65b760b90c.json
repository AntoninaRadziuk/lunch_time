{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport home from \"../HomePage\";\nimport { BrowserRouter as useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\"); // const [accountType, setAccountType] = useState(\"\");\n\n  let history = useHistory();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    console.log(\"CLIENT_BUTTON\");\n    fetch(\"http://localhost:4000/accounts/register/user\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }) // body data type must match \"Content-Type\" header\n\n    }).then(response => {\n      response.json();\n      console.log(response.status);\n\n      if (response.status === \"201\") {\n        history.push(\"/home\");\n      }\n    }).then(json => console.log(\"json\", json)).catch(err => console.log(\"err\", err));\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\") setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js"],"names":["React","useState","styles","home","BrowserRouter","useHistory","TextField","FormHelperText","Button","FormGroup","FormControl","ControlLabel","ClientRegister","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","history","validateForm","length","handleSubmit","event","preventDefault","console","log","target","name","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","status","push","catch","err","handleChange","value","Register","root","CustomInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport home from \"../HomePage\";\nimport { BrowserRouter as useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // const [accountType, setAccountType] = useState(\"\");\n  let history = useHistory();\n\n  function validateForm() {\n    return (\n      email.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm === passwordConfirm\n    );\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n      console.log(\"CLIENT_BUTTON\");\n      fetch(\"http://localhost:4000/accounts/register/user\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => {\n          response.json()\n          console.log(response.status);\n          if (response.status === \"201\") {\n            history.push(\"/home\");\n          }\n        })\n        .then((json) => console.log(\"json\", json))\n        .catch((err) => console.log(\"err\", err));\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\")\n      setPasswordConfirm(event.target.value);\n  };\n\n  return (\n    <div className={styles.Register}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password_confirm\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n        <Button type=\"submit\">\n          Register\n        </Button>\n        {/* <Button type=\"submit\" onClick={restaurant_onClick}>\n          Register as restaurant\n        </Button> */}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}