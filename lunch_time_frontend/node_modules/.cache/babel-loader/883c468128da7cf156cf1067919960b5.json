{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientProfilePage/ClientProfile.js\";\nimport React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./ClientProfile.module.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\"; // import { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nimport NavBar from \"../NavBarComponent\";\nimport UserContext from \"../userContext\";\nimport QrReader from \"react-qr-reader\";\nimport Button from \"@material-ui/core/Button\";\nexport default function Profile() {\n  const userContext = useContext(UserContext);\n  const [stampsCounter, setStampsCounter] = useState();\n  const [result, setResult] = useState(\"\");\n  const [fetchCounter, setFetchCounter] = useState(0);\n  const [clickedButton, setClickedButton] = useState(false);\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  const fetchProfile = () => {\n    fetch(\"http://localhost:4000/accounts/clientprofile\" + `?email=${userContext.user.email}`, {\n      method: \"GET\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      setStampsCounter(json.stamps_counter);\n    }).catch(err => console.log(\"err\", err));\n  };\n\n  const handleScan = data => {\n    if (!!data) {\n      // console.log(\"data\", data);\n      if (fetchCounter !== 1) {\n        // console.log(\"fetchcounter\", fetchCounter);\n        fetchStampsCounter(data);\n        setFetchCounter(1);\n      }\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  };\n\n  const fetchStampsCounter = result => {\n    const email = userContext.user.email;\n    fetch(\"http://localhost:4000/accounts/stampsCounter\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      },\n      body: JSON.stringify({\n        email,\n        result\n      })\n    }).then(response => {\n      console.log(response.status);\n      return response.json();\n    }).then(json => {\n      setResult(json.message);\n      console.log(\"json\", json);\n    }).catch(err => console.log(\"err\", err));\n  };\n\n  const handleButton = () => {\n    if (!clickedButton) setClickedButton(true);\n    if (clickedButton) setClickedButton(false);\n  };\n\n  const cleanStamps = () => {\n    const email = userContext.user.email;\n    fetch(\"http://localhost:4000/client/cleanStamps\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(response => {\n      console.log(response.status);\n      return response.json();\n    }).then(json => {\n      console.log(\"json\", json);\n    }).catch(err => console.log(\"err\", err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, localStorage.getItem(\"account_type\")), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"email: \", userContext.user.email), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"stamps counter: \", stampsCounter), stampsCounter === 13 && /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: cleanStamps // href=\"/homerestaurant\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Get free lunch!\"), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"scan qr code\"), clickedButton && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    className: styles.CodeReader,\n    delay: 500,\n    onError: handleError,\n    onScan: handleScan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, result)));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientProfilePage/ClientProfile.js"],"names":["React","useEffect","useState","useContext","Fragment","styles","BrowserRouter","Router","Switch","Route","Link","TextField","FormHelperText","NavBar","UserContext","QrReader","Button","Profile","userContext","stampsCounter","setStampsCounter","result","setResult","fetchCounter","setFetchCounter","clickedButton","setClickedButton","fetchProfile","fetch","user","email","method","mode","cache","headers","Authorization","token","then","response","json","stamps_counter","catch","err","console","log","handleScan","data","fetchStampsCounter","handleError","error","body","JSON","stringify","status","message","handleButton","cleanStamps","container","title","localStorage","getItem","root","button","CodeReader"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./ClientProfile.module.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\n// import { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport NavBar from \"../NavBarComponent\";\nimport UserContext from \"../userContext\";\nimport QrReader from \"react-qr-reader\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Profile() {\n  const userContext = useContext(UserContext);\n  const [stampsCounter, setStampsCounter] = useState();\n  const [result, setResult] = useState(\"\");\n  const [fetchCounter, setFetchCounter] = useState(0);\n  const [clickedButton, setClickedButton] = useState(false);\n\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  const fetchProfile = () => {\n    fetch(\n      \"http://localhost:4000/accounts/clientprofile\" +\n        `?email=${userContext.user.email}`,\n      {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token,\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setStampsCounter(json.stamps_counter);\n      })\n      .catch((err) => console.log(\"err\", err));\n  };\n\n  const handleScan = (data) => {\n    if (!!data) {\n      // console.log(\"data\", data);\n      if (fetchCounter !== 1) {\n        // console.log(\"fetchcounter\", fetchCounter);\n        fetchStampsCounter(data);\n        setFetchCounter(1);\n      }\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  const fetchStampsCounter = (result) => {\n    const email = userContext.user.email;\n    fetch(\"http://localhost:4000/accounts/stampsCounter\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token,\n      },\n      body: JSON.stringify({\n        email,\n        result,\n      }),\n    })\n      .then((response) => {\n        console.log(response.status);\n        return response.json();\n      })\n      .then((json) => {\n        setResult(json.message);\n        console.log(\"json\", json);\n      })\n      .catch((err) => console.log(\"err\", err));\n  };\n\n  const handleButton = () => {\n    if (!clickedButton) setClickedButton(true);\n    if (clickedButton) setClickedButton(false);\n  };\n\n  const cleanStamps = () => {\n    const email = userContext.user.email;\n    fetch(\"http://localhost:4000/client/cleanStamps\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token,\n      },\n      body: JSON.stringify({\n        email,\n      }),\n    })\n      .then((response) => {\n        console.log(response.status);\n        return response.json();\n      })\n      .then((json) => {\n        console.log(\"json\", json);\n      })\n      .catch((err) => console.log(\"err\", err));\n  }\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>{localStorage.getItem(\"account_type\")}</h1>\n      <a>email: {userContext.user.email}</a>\n      <br></br>\n      <a>stamps counter: {stampsCounter}</a>\n      {stampsCounter === 13 && (\n        <Button\n          classes={{ root: styles.button }}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={cleanStamps}\n          // href=\"/homerestaurant\"\n        >\n          Get free lunch!\n        </Button>\n      )}\n      <Button\n        classes={{ root: styles.button }}\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={handleButton}\n      >\n        scan qr code\n      </Button>\n\n      {clickedButton && (\n        <Fragment>\n          <QrReader\n            className={styles.CodeReader}\n            delay={500}\n            onError={handleError}\n            onScan={handleScan}\n          />\n          <p>{result}</p>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}