{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/PrivateRoutes.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Home from \"./HomePage\";\nimport NavBar from \"./NavBarComponent\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoutes() {\n  const [isLogedIn, setisLogedIn] = useState(false);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    console.log('tokenprov:', isLogedIn);\n    token !== undefined ? setisLogedIn(true) : setisLogedIn(false);\n  });\n  console.log('tokenprov:', isLogedIn);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, isLogedIn ? /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default PrivateRoutes;","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/PrivateRoutes.js"],"names":["React","useState","useEffect","Fragment","Home","NavBar","BrowserRouter","Router","Switch","Route","Link","useHistory","Redirect","PrivateRoutes","isLogedIn","setisLogedIn","token","localStorage","getItem","console","log","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,QANF,QAOO,kBAPP;;AASA,SAASC,aAAT,GAAyB;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,SAAzB;AACAE,IAAAA,KAAK,KAAKK,SAAV,GAAsBN,YAAY,CAAC,IAAD,CAAlC,GAA2CA,YAAY,CAAC,KAAD,CAAvD;AACD,GAHQ,CAAT;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,SAAzB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,gBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADQ,gBASR,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD;;AAED,eAAeD,aAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Home from \"./HomePage\";\nimport NavBar from \"./NavBarComponent\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction PrivateRoutes() {\n  const [isLogedIn, setisLogedIn] = useState(false);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    console.log('tokenprov:',isLogedIn)\n    token !== undefined ? setisLogedIn(true) : setisLogedIn(false);\n  });\n\n  console.log('tokenprov:',isLogedIn)\n\n  return (\n    <div>\n      {isLogedIn ? (\n        <Switch>\n          <Route path=\"/home\">\n            <NavBar>\n              <Home />\n            </NavBar>\n          </Route>\n        </Switch>\n      ) : (\n        <Redirect to=\"/login\"></Redirect>\n      )}\n    </div>\n  );\n}\n\nexport default PrivateRoutes;\n"]},"metadata":{},"sourceType":"module"}