{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logo.png\";\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    console.log(\"CLIENT_BUTTON\");\n    fetch(\"http://localhost:4000/accounts/register/user\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }) // body data type must match \"Content-Type\" header\n\n    }).then(response => {\n      response.json();\n      console.log('response.status: ', response.status);\n\n      if (response.status === 201) {\n        history.push(\"/home\");\n      }\n    }).then(json => console.log(\"json\", json)).catch(err => console.log(\"err\", err));\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\") setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ClientRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"logo\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInput\n    },\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, error)), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, error)), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, error)), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js"],"names":["React","useState","styles","useHistory","TextField","FormHelperText","Button","logo","ClientRegister","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","history","validateForm","length","handleSubmit","event","preventDefault","console","log","target","name","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","status","push","catch","err","handleChange","value","container","root","CustomInput","errorContainer","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logo.png\";\n\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  function validateForm() {\n    return (\n      email.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm === passwordConfirm\n    );\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    console.log(\"CLIENT_BUTTON\");\n    fetch(\"http://localhost:4000/accounts/register/user\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }), // body data type must match \"Content-Type\" header\n    })\n      .then((response) => {\n        response.json();\n        console.log('response.status: ', response.status);\n        if (response.status === 201) {\n          history.push(\"/home\");\n        }\n      })\n      .then((json) => console.log(\"json\", json))\n      .catch((err) => console.log(\"err\", err));\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\")\n      setPasswordConfirm(event.target.value);\n  };\n\n  return (\n    <div className={styles.ClientRegister}>\n      <div className={styles.container}>\n        <img class=\"logo\" src={logo} alt=\"Logo\" />\n        <form onSubmit={handleSubmit}>\n          <TextField\n            classes={{ root: styles.CustomInput }}\n            name=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <div className={styles.errorContainer}>\n            {!!error && (\n              <FormHelperText classes={{ root: styles.error }} error>\n                {error}\n              </FormHelperText>\n            )}\n          </div>\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            classes={{ root: styles.CustomInput }}\n          />\n          <div className={styles.errorContainer}>\n            {!!error && (\n              <FormHelperText classes={{ root: styles.error }} error>\n                {error}\n              </FormHelperText>\n            )}\n          </div>\n          <TextField\n            type=\"password\"\n            name=\"password_confirm\"\n            label=\"Confirm password\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            classes={{ root: styles.CustomInput }}\n          />\n          <div className={styles.errorContainer}>\n            {!!error && (\n              <FormHelperText classes={{ root: styles.error }} error>\n                {error}\n              </FormHelperText>\n            )}\n          </div>\n          <Button\n            classes={{ root: styles.button }}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}