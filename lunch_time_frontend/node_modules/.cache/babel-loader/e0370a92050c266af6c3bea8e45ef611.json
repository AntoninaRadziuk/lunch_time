{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RestaurantOffertsPage/RestaurantOfferts.js\";\nimport React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./RestaurantOfferts.module.css\";\nimport UserContext from \"../userContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 300\n  }\n}));\nexport default function RestaurantOfferts() {\n  const userContext = useContext(UserContext);\n  const [name, setName] = useState();\n  const [address, setAddress] = useState();\n  const [lunch_start_time, setLunch_start_time] = useState();\n  const [lunch_end_time, setLunch_end_time] = useState();\n  const [website_address, setWebsite_address] = useState();\n  const [offertsArray, setOffertsArray] = useState({});\n  const [soupPrice, setSoupPrice] = useState();\n  const [dishPrice, setDishPrice] = useState();\n  const [setPrice, setSetPrice] = useState();\n  const [setAndDrinkPrice, setSetAndDrinkPrice] = useState(); // const [datesTable, setDatesTable] = useState([]);\n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    fetchOfferts();\n  }, []);\n\n  const fetchOfferts = () => {\n    fetch(\"http://localhost:4000/restaurant/offerts\" + `?email=${userContext.user.email}`, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      setOffertsArray(json.offertsArray); // setDatesTable(Object.keys(json.offertsArray));\n      // console.log(json.offertsArray['10/10/10'].length)\n    }).catch(err => console.log(\"err\", err)); // console.log(offertsArray)\n    // console.log(Object.keys(offertsArray))\n  };\n\n  function f() {\n    return Array.from(arguments);\n  } // console.log(offertsArray);\n  // console.log(offertsArray['10/10/10'])\n  // console.log(Object.values(offertsArray));\n  // console.log(Object.entries(offertsArray)[4])\n  // let array = Array.from(offertsArray)\n  // let array = f(offertsArray)\n  // console.log(array[0])\n  // console.log(Object.keys(offertsArray))\n  // let array = offertsArray['10/10/10']\n  // if(!!array) console.log(array[1])\n  // console.log(offertsArray, Object.keys(offertsArray))\n  // for (const [key, value] of Object.entries(offertsArray)) {\n  //   console.log(offertsArray[`${key}`]);\n  // }\n\n\n  const newTable = Object.entries(offertsArray);\n  const datesTable = newTable.map((element, index) => element[0]);\n  const valuestable = newTable.map((element, index) => [element[1].map((e, i) => [e.type, e.name])]);\n  console.log(valuestable[4]); // valuestable.map((e, i) => e.map((el, ind) => console.log(el[0])))\n  // const valArr = valuestable[4]\n  // console.log(valArr)\n\n  if (!!valuestable[4]) valuestable[4].map((e, i) => console.log(i, e[4]));\n  const offertsTable = datesTable.map((element, index) => [element, valuestable[index]] // console.log(element[1])\n  // table.push(element[0])\n  // element[0].push(element[1].map((e, i) => [e.type, e.name]))\n  // [element[0], element[1][0]]\n  ); // offertsTable.map((element, index) => \n  //   // console.log(element[0])\n  //   element[1].map((e, i) => console.log('e', element[0], e)))\n  // console.log(offertsTable[0])\n  // console.log(newTable[0]);\n  // newTable.map((element, index) =>\n  //   // console.log(element[1])\n  //   element[1].map((e, i) =>\n  //     console.log(e.type, e.name))\n  // )\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bigBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Restaurant\"), datesTable.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, element), valuestable[index].map((e, i) => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"soups: \", index, e[i]))))))))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RestaurantOffertsPage/RestaurantOfferts.js"],"names":["React","useEffect","useState","useContext","Fragment","styles","UserContext","useHistory","makeStyles","Grid","Paper","Typography","ButtonBase","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","RestaurantOfferts","userContext","name","setName","address","setAddress","lunch_start_time","setLunch_start_time","lunch_end_time","setLunch_end_time","website_address","setWebsite_address","offertsArray","setOffertsArray","soupPrice","setSoupPrice","dishPrice","setDishPrice","setPrice","setSetPrice","setAndDrinkPrice","setSetAndDrinkPrice","history","classes","fetchOfferts","fetch","user","email","method","mode","cache","headers","Authorization","token","then","response","json","catch","err","console","log","f","Array","from","arguments","newTable","Object","entries","datesTable","map","element","index","valuestable","e","i","type","offertsTable","bigBox","container","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,QAAQ,EAAE;AAHL;AAJgC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAMC,WAAW,GAAGpB,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,EAAhC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,EAAtC;AACA,QAAM,CAAC0B,gBAAD,EAAmBC,mBAAnB,IAA0C3B,QAAQ,EAAxD;AACA,QAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,EAApD;AACA,QAAM,CAAC8B,eAAD,EAAkBC,kBAAlB,IAAwC/B,QAAQ,EAAtD;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,EAA1C;AACA,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,EAA1C;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,EAAxC;AACA,QAAM,CAACwC,gBAAD,EAAmBC,mBAAnB,IAA0CzC,QAAQ,EAAxD,CAX0C,CAY1C;;AACA,QAAM0C,OAAO,GAAGrC,UAAU,EAA1B;AACA,QAAMsC,OAAO,GAAGhC,SAAS,EAAzB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd6C,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CACH,6CACG,UAASxB,WAAW,CAACyB,IAAZ,CAAiBC,KAAM,EAFhC,EAGH;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,KAAK,EAAE,UAHT;AAIEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE/B,WAAW,CAACyB,IAAZ,CAAiBO;AAFzB;AAJX,KAHG,CAAL,CAaGC,IAbH,CAaSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAfH,EAgBGF,IAhBH,CAgBSE,IAAD,IAAU;AACdvB,MAAAA,eAAe,CAACuB,IAAI,CAACxB,YAAN,CAAf,CADc,CAEd;AACA;AACD,KApBH,EAqBGyB,KArBH,CAqBUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB,CArBlB,EADyB,CAuBzB;AACA;AACD,GAzBD;;AA2BA,WAASG,CAAT,GAAa;AACX,WAAOC,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAP;AACD,GAjDyC,CAmD1C;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAenC,YAAf,CAAjB;AACA,QAAMoC,UAAU,GAAGH,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAC9BD,OAAO,CAAC,CAAD,CADU,CAAnB;AAEA,QAAME,WAAW,GAAGP,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAC/B,CAACD,OAAO,CAAC,CAAD,CAAP,CACAD,GADA,CACI,CAACI,CAAD,EAAIC,CAAJ,KAAU,CAACD,CAAC,CAACE,IAAH,EAASF,CAAC,CAACnD,IAAX,CADd,CAAD,CADkB,CAApB;AAIAqC,EAAAA,OAAO,CAACC,GAAR,CAAYY,WAAW,CAAC,CAAD,CAAvB,EA7E0C,CA8E1C;AAEA;AACA;;AACA,MAAG,CAAC,CAACA,WAAW,CAAC,CAAD,CAAhB,EAAqBA,WAAW,CAAC,CAAD,CAAX,CAAeH,GAAf,CAAmB,CAACI,CAAD,EAAIC,CAAJ,KAAUf,OAAO,CAACC,GAAR,CAAYc,CAAZ,EAAeD,CAAC,CAAC,CAAD,CAAhB,CAA7B;AAErB,QAAMG,YAAY,GAAGR,UAAU,CAACC,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,KAClC,CAACD,OAAD,EAAUE,WAAW,CAACD,KAAD,CAArB,CADmB,CAEnB;AACA;AACA;AACA;AALmB,GAArB,CApF0C,CA4F1C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEpE,MAAM,CAAC0E,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE1E,MAAM,CAAC2E,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAE3E,MAAM,CAAC4E,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGX,UAAU,CAACC,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,kBAChB;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC9B,IAAxB;AAA8B,IAAA,GAAG,EAAE0D,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE5B,OAAO,CAAC5B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,SAAS,MAAvB;AAAwB,IAAA,SAAS,EAAC,QAAlC;AAA2C,IAAA,OAAO,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGuD,OADH,CADF,EAMGE,WAAW,CAACD,KAAD,CAAX,CAAmBF,GAAnB,CAAuB,CAACI,CAAD,EAAIC,CAAJ,kBACxB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUH,KADV,EACiBE,CAAC,CAACC,CAAD,CADlB,CADC,CANH,CADF,CADF,CADF,CADF,CADC,CAJH,CADF,CADF;AAuFD","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./RestaurantOfferts.module.css\";\nimport UserContext from \"../userContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 300,\n  },\n}));\n\nexport default function RestaurantOfferts() {\n  const userContext = useContext(UserContext);\n  const [name, setName] = useState();\n  const [address, setAddress] = useState();\n  const [lunch_start_time, setLunch_start_time] = useState();\n  const [lunch_end_time, setLunch_end_time] = useState();\n  const [website_address, setWebsite_address] = useState();\n  const [offertsArray, setOffertsArray] = useState({});\n  const [soupPrice, setSoupPrice] = useState();\n  const [dishPrice, setDishPrice] = useState();\n  const [setPrice, setSetPrice] = useState();\n  const [setAndDrinkPrice, setSetAndDrinkPrice] = useState();\n  // const [datesTable, setDatesTable] = useState([]);\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchOfferts();\n  }, []);\n\n  const fetchOfferts = () => {\n    fetch(\n      \"http://localhost:4000/restaurant/offerts\" +\n        `?email=${userContext.user.email}`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token,\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setOffertsArray(json.offertsArray);\n        // setDatesTable(Object.keys(json.offertsArray));\n        // console.log(json.offertsArray['10/10/10'].length)\n      })\n      .catch((err) => console.log(\"err\", err));\n    // console.log(offertsArray)\n    // console.log(Object.keys(offertsArray))\n  };\n\n  function f() {\n    return Array.from(arguments);\n  }\n\n  // console.log(offertsArray);\n\n  // console.log(offertsArray['10/10/10'])\n  // console.log(Object.values(offertsArray));\n\n  // console.log(Object.entries(offertsArray)[4])\n\n  // let array = Array.from(offertsArray)\n  // let array = f(offertsArray)\n  // console.log(array[0])\n  // console.log(Object.keys(offertsArray))\n  // let array = offertsArray['10/10/10']\n  // if(!!array) console.log(array[1])\n  // console.log(offertsArray, Object.keys(offertsArray))\n\n  // for (const [key, value] of Object.entries(offertsArray)) {\n  //   console.log(offertsArray[`${key}`]);\n  // }\n\n  const newTable = Object.entries(offertsArray);\n  const datesTable = newTable.map((element, index) => \n    element[0])\n  const valuestable = newTable.map((element, index) =>\n    [element[1]\n    .map((e, i) => [e.type, e.name])]\n    )\n  console.log(valuestable[4])\n  // valuestable.map((e, i) => e.map((el, ind) => console.log(el[0])))\n\n  // const valArr = valuestable[4]\n  // console.log(valArr)\n  if(!!valuestable[4]) valuestable[4].map((e, i) => console.log(i, e[4]))\n\n  const offertsTable = datesTable.map((element, index) =>\n    [element, valuestable[index]]\n    // console.log(element[1])\n    // table.push(element[0])\n    // element[0].push(element[1].map((e, i) => [e.type, e.name]))\n    // [element[0], element[1][0]]\n  );\n\n  // offertsTable.map((element, index) => \n  //   // console.log(element[0])\n  //   element[1].map((e, i) => console.log('e', element[0], e)))\n\n  // console.log(offertsTable[0])\n  // console.log(newTable[0]);\n  // newTable.map((element, index) =>\n  //   // console.log(element[1])\n  //   element[1].map((e, i) =>\n  //     console.log(e.type, e.name))\n  // )\n\n  return (\n    <div className={styles.bigBox}>\n      <div className={styles.container}>\n        <h1 className={styles.title}>Restaurant</h1>\n\n        {/* {offertsTable.map((element, index) => element[1].map((e, i) => <a key={i}>{element[0]}{e}</a> ))} */}\n        {datesTable.map((element, index) =>\n        <div className={classes.root} key={index}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    {element}\n                  </Typography>\n                  {/* <Typography variant=\"body2\" gutterBottom> */}\n                  {/* {valuestable.map((element, index) => */}\n                  {valuestable[index].map((e, i) => \n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    soups: {index}{e[i]}\n                  </Typography>\n                  )}\n                  {/* )} */}\n                  {/* <Typography variant=\"body2\" color=\"textSecondary\" key={i}>\n                    dishes: {e}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    drinks: kompot\n                  </Typography> */}\n                </Grid>\n                {/* <Grid item>\n                </Grid> */}\n              </Grid>\n              {/* <Grid item>\n                <Typography variant=\"subtitle1\">$19.00</Typography>\n              </Grid> */}\n            </Grid>\n          </Paper>\n        </div>\n        )}\n\n        {/* <a>name: {name}</a>\n        <br></br>\n        <a>Data: {date}</a>\n        <br></br>\n        <a>Soup price: {soupPrice}</a>\n        <br></br>\n        <a>Dish price: {dishPrice}</a>\n        <br></br>\n        <a>Drink price: {drinkPrice}</a>\n        <br></br>\n        <a>Set price: {setPrice}</a>\n        <br></br>\n        <a>Set and drink price: {setAndDrinkPrice}</a>\n        <br></br>\n        {dateTable.map((elementDate, indexDate) => (\n          <Fragment key={indexDate}>\n            <a>Data: {elementDate}</a>\n            <a>Soups:</a>\n            <br></br>\n            {soupTable.map((elementSoup, indexSoup) => (\n              <Fragment key={indexSoup}>\n                <a>{elementSoup}</a>\n                <br></br>\n              </Fragment>\n            ))}\n            <a>Dishes:</a>\n            <br></br>\n            {dishTable.map((elementDish, indexDish) => (\n              <Fragment key={indexDish}>\n                <a>{elementDish}</a>\n                <br></br>\n              </Fragment>\n            ))}\n            <a>Drinks:</a>\n            <br></br>\n            {drinkTable.map((elementDrink, indexDrink) => (\n              <Fragment key={indexDrink}>\n                <a>{elementDrink}</a>\n                <br></br>\n              </Fragment>\n            ))}\n          </Fragment>\n        ))} */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}