{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RegisterPage/Register.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } //     fetch('http://localhost:4000/users/login', {\n    //       method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    //       mode: 'cors',\n    //       cache: 'no-cache',\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify({ email, password }) // body data type must match \"Content-Type\" header\n    //     })\n    //     .then(response => response.json())\n    //     .then(json => console.log('json', json))\n    //     .catch(err => console.log('err', err))\n\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RegisterPage/Register.js"],"names":["React","useState","styles","BrowserRouter","Router","Switch","Route","Link","TextField","FormHelperText","Button","FormGroup","FormControl","ControlLabel","Register","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","validateForm","length","handleSubmit","event","preventDefault","console","log","handleChange","target","name","value","root","CustomInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    }\n\n    //     fetch('http://localhost:4000/users/login', {\n    //       method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    //       mode: 'cors',\n    //       cache: 'no-cache',\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify({ email, password }) // body data type must match \"Content-Type\" header\n    //     })\n    //     .then(response => response.json())\n    //     .then(json => console.log('json', json))\n    //     .catch(err => console.log('err', err))\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n  };\n\n  return (\n    <div className={styles.Register}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password_confirm\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n        <Button type=\"submit\">Register</Button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}