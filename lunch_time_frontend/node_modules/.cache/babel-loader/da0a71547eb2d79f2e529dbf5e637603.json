{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RegisterPage/Register.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport restaurantRegister from \"../RestaurantRegisterPage\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [accountType, setAccountType] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && passwordConfirm === passwordConfirm;\n  }\n\n  function client_onClick() {\n    setAccountType(\"client\");\n  }\n\n  function restaurant_onClick() {\n    setAccountType(\"restaurant\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    if (accountType === \"client\") {\n      console.log(\"CLIENT_BUTTON\");\n      fetch(\"http://localhost:4000/accounts/register/user\", {\n        method: \"POST\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        }) // body data type must match \"Content-Type\" header\n\n      }).then(response => response.json()).then(json => console.log(\"json\", json)).catch(err => console.log(\"err\", err));\n    } else {\n      fetch(\"http://localhost:4000/accounts/register/restaurant\", {\n        method: \"POST\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        }) // body data type must match \"Content-Type\" header\n\n      }).then(response => response.json()).then(json => console.log(\"json\", json)).catch(err => console.log(\"err\", err));\n    }\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\") setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), !!error && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: client_onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Register as client\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: restaurant_onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Register as restaurant\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/restaurantRegister\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Restaurant register\")));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RegisterPage/Register.js"],"names":["React","useState","styles","restaurantRegister","BrowserRouter","Router","Switch","Route","Link","useHistory","TextField","FormHelperText","Button","FormGroup","FormControl","ControlLabel","Register","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","accountType","setAccountType","validateForm","length","client_onClick","restaurant_onClick","handleSubmit","event","preventDefault","console","log","target","name","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","catch","err","handleChange","value","root","CustomInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Register.module.css\";\nimport restaurantRegister from \"../RestaurantRegisterPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [accountType, setAccountType] = useState(\"\");\n\n  function validateForm() {\n    return (\n      email.length > 0 &&\n      password.length > 0 &&\n      passwordConfirm === passwordConfirm\n    );\n  }\n\n  function client_onClick() {\n    setAccountType(\"client\");\n  }\n  function restaurant_onClick() {\n    setAccountType(\"restaurant\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.name);\n\n    if (!validateForm()) {\n      setError(\"Wrong login or password\");\n    } else {\n      console.log(\"OK rejestration!\");\n    }\n\n    if (accountType === \"client\") {\n      console.log(\"CLIENT_BUTTON\");\n      fetch(\"http://localhost:4000/accounts/register/user\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => response.json())\n        .then((json) => console.log(\"json\", json))\n        .catch((err) => console.log(\"err\", err));\n    } else {\n      fetch(\"http://localhost:4000/accounts/register/restaurant\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => response.json())\n        .then((json) => console.log(\"json\", json))\n        .catch((err) => console.log(\"err\", err));\n    }\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\")\n      setPasswordConfirm(event.target.value);\n  };\n\n  return (\n    <div className={styles.Register}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password_confirm\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          classes={{ root: styles.CustomInput }}\n        />\n        {!!error && <FormHelperText error>{error}</FormHelperText>}\n        <Button type=\"submit\" onClick={client_onClick}>\n          Register as client\n        </Button>\n        <Button type=\"submit\" onClick={restaurant_onClick}>\n          Register as restaurant\n        </Button>\n        <Link to=\"/restaurantRegister\">Restaurant register</Link>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}