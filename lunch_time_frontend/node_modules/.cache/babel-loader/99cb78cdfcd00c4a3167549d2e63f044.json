{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/AddLunchFormPage/AddLunchForm.js\";\nimport React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./AddLunchForm.module.css\";\nimport UserContext from \"../userContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nexport default function AddLunchForm() {\n  const userContext = useContext(UserContext);\n  const [soupsTable, setSoupsTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [soupsIndex, setSoupsIndex] = useState(0);\n  const [dishTable, setDishTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [dishIndex, setDishIndex] = useState(0);\n  const [drinksTable, setDrinksTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [drinksIndex, setDrinksIndex] = useState(0); //   useEffect(() => {\n  //     fetchProfile();\n  //   }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:4000/accounts/addlunch\" + `?email=${userContext.user.email}`, {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      },\n      body: JSON.stringify({})\n    }).then(response => {\n      console.log(response.status);\n      return response.json();\n    }).then(json => {// setName(json.name);\n      // console.log(\"json\", json);\n    }).catch(err => console.log(\"err\", err));\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"soup\") {\n      soupsTable[soupsIndex] = event.target.value;\n      setSoupsTable(soupsTable);\n    }\n\n    if (event.target.name === \"dish\") {\n      dishTable[dishIndex] = event.target.value;\n      setDishTable(dishTable);\n    } // console.log(soupsTable);\n\n  };\n\n  const soupClick = event => {\n    if (event.target.name = \"soup\") {\n      if (soupsTable[soupsIndex] !== \"\") {\n        setSoupsIndex(soupsIndex + 1);\n      }\n    }\n\n    if (event.target.name = \"dish\") {\n      if (dishTable[dishIndex] !== \"\") {\n        setSoupsIndex(dishIndex + 1);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Add lunch offert\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Soups\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"soup_price\",\n    label: \"Soup price\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), soupsTable.map((element, index) => index <= soupsIndex ? /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"soup\",\n    label: \"Soup\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    name: \"soup\",\n    onClick: soupClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Main dishes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"dish_price\",\n    label: \"Main dish price\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), dishTable.map((element, index) => index <= dishIndex ? /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"dish\",\n    label: \"Dish\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    name: \"dish\",\n    onClick: soupClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"                  \", /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 36\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Drinks\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"drink_price\",\n    label: \"Drink price\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInput\n    },\n    name: \"Drink1\",\n    label: \"Drink\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/AddLunchFormPage/AddLunchForm.js"],"names":["React","useEffect","useState","useContext","Fragment","styles","UserContext","TextField","FormHelperText","IconButton","AddIcon","AddLunchForm","userContext","soupsTable","setSoupsTable","soupsIndex","setSoupsIndex","dishTable","setDishTable","dishIndex","setDishIndex","drinksTable","setDrinksTable","drinksIndex","setDrinksIndex","handleSubmit","event","preventDefault","fetch","user","email","method","mode","cache","headers","Authorization","token","body","JSON","stringify","then","response","console","log","status","json","catch","err","handleChange","target","name","value","soupClick","Login","box","title","container","smallerContainer","dishes","root","CustomInputPrice","map","element","index","PlusButton","Icon","CustomInput"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./AddLunchForm.module.css\";\nimport UserContext from \"../userContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport default function AddLunchForm() {\n  const userContext = useContext(UserContext);\n  const [soupsTable, setSoupsTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [soupsIndex, setSoupsIndex] = useState(0);\n  const [dishTable, setDishTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [dishIndex, setDishIndex] = useState(0);\n  const [drinksTable, setDrinksTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [drinksIndex, setDrinksIndex] = useState(0);\n\n  //   useEffect(() => {\n  //     fetchProfile();\n  //   }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\n      \"http://localhost:4000/accounts/addlunch\" +\n        `?email=${userContext.user.email}`,\n      {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token,\n        },\n        body: JSON.stringify({}),\n      }\n    )\n      .then((response) => {\n        console.log(response.status);\n\n        return response.json();\n      })\n      .then((json) => {\n        // setName(json.name);\n        // console.log(\"json\", json);\n      })\n      .catch((err) => console.log(\"err\", err));\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"soup\") {\n      soupsTable[soupsIndex] = event.target.value;\n      setSoupsTable(soupsTable);\n    }\n    if (event.target.name === \"dish\") {\n      dishTable[dishIndex] = event.target.value;\n      setDishTable(dishTable);\n    }\n    // console.log(soupsTable);\n  };\n\n  const soupClick = (event) => {\n    if ((event.target.name = \"soup\")) {\n      if (soupsTable[soupsIndex] !== \"\") {\n        setSoupsIndex(soupsIndex + 1);\n      }\n    }\n    if ((event.target.name = \"dish\")) {\n      if (dishTable[dishIndex] !== \"\") {\n        setSoupsIndex(dishIndex + 1);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.Login}>\n      <div className={styles.box}>\n        <h1 className={styles.title}>Add lunch offert</h1>\n\n        <form onSubmit={handleSubmit}>\n          <div className={styles.container}>\n            <div className={styles.smallerContainer}>\n              <h1 className={styles.dishes}>Soups</h1>\n              <br></br>\n              <TextField\n                classes={{ root: styles.CustomInputPrice }}\n                name=\"soup_price\"\n                label=\"Soup price\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n              {soupsTable.map((element, index) =>\n                index <= soupsIndex ? (\n                  <TextField\n                    key={index}\n                    classes={{ root: styles.CustomInputPrice }}\n                    name=\"soup\"\n                    label=\"Soup\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                  />\n                ) : (\n                  <Fragment></Fragment>\n                )\n              )}\n              <div>\n                <IconButton\n                  classes={{ root: styles.PlusButton }}\n                  size=\"small\"\n                  name=\"soup\"\n                  onClick={soupClick}\n                >\n                  <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                </IconButton>\n              </div>\n            </div>\n            <div className={styles.smallerContainer}>\n              <h1 className={styles.dishes}>Main dishes</h1>\n              <br></br>\n              <TextField\n                classes={{ root: styles.CustomInputPrice }}\n                name=\"dish_price\"\n                label=\"Main dish price\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n              {dishTable.map((element, index) =>\n                index <= dishIndex ? (\n                  <TextField\n                    key={index}\n                    classes={{ root: styles.CustomInputPrice }}\n                    name=\"dish\"\n                    label=\"Dish\"\n                    variant=\"outlined\"\n                    onChange={handleChange}\n                  />\n                ) : (\n                  <Fragment></Fragment>\n                )\n              )}\n              <div>\n              <IconButton\n                  classes={{ root: styles.PlusButton }}\n                  size=\"small\"\n                  name=\"dish\"\n                  onClick={soupClick}\n                >                  <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                </IconButton>\n              </div>\n            </div>\n            <div className={styles.smallerContainer}>\n              <h1 className={styles.dishes}>Drinks</h1>\n              <br></br>\n              <TextField\n                classes={{ root: styles.CustomInputPrice }}\n                name=\"drink_price\"\n                label=\"Drink price\"\n                variant=\"outlined\"\n                onChange={handleChange}\n              />\n              <div>\n                <TextField\n                  classes={{ root: styles.CustomInput }}\n                  name=\"Drink1\"\n                  label=\"Drink\"\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                />\n                <IconButton classes={{ root: styles.PlusButton }} size=\"small\">\n                  <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                </IconButton>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}