{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logo.png\";\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const history = useHistory();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(password, passwordConfirm);\n    fetch(\"http://localhost:4000/accounts/register/user\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        passwordConfirm\n      }) // body data type must match \"Content-Type\" header\n\n    }).then(response => {\n      console.log(\"response.status: \", response.status);\n\n      if (response.status === 201) {\n        history.push(\"/login\");\n      }\n\n      return response.json();\n    }) // .then((json) => console.log(\"json\", json))\n    .then(json => {\n      setErrors(json);\n      return console.log(\"json\", json);\n    }).catch(err => console.log(\"err\", err));\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\") setPasswordConfirm(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ClientRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"logo\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInput\n    },\n    type: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, !!errors.email && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, errors.email)), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    name: \"password_confirm\",\n    label: \"Confirm password\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    classes: {\n      root: styles.CustomInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, !!errors.password && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/ClientRegisterPage/ClientRegister.js"],"names":["React","useState","styles","useHistory","TextField","FormHelperText","Button","logo","ClientRegister","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","errors","setErrors","history","handleSubmit","event","preventDefault","console","log","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","status","push","json","catch","err","handleChange","target","name","value","container","root","CustomInput","errorContainer","error","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./ClientRegister.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../logo.png\";\n\nexport default function ClientRegister() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const history = useHistory();\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    console.log(password, passwordConfirm)\n\n    fetch(\"http://localhost:4000/accounts/register/user\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password, passwordConfirm }), // body data type must match \"Content-Type\" header\n    })\n      .then((response) => {\n        console.log(\"response.status: \", response.status);\n        if (response.status === 201) {\n          history.push(\"/login\");\n        }\n        return response.json();\n      })\n      // .then((json) => console.log(\"json\", json))\n      .then((json) => {\n        setErrors(json);\n        return console.log(\"json\", json);\n      })\n      .catch((err) => console.log(\"err\", err));\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"email\") setEmail(event.target.value);\n    if (event.target.name === \"password\") setPassword(event.target.value);\n    if (event.target.name === \"password_confirm\")\n      setPasswordConfirm(event.target.value);\n  };\n\n  return (\n    <div className={styles.ClientRegister}>\n      <div className={styles.container}>\n        <img class=\"logo\" src={logo} alt=\"Logo\" />\n        <form onSubmit={handleSubmit}>\n          <TextField\n            classes={{ root: styles.CustomInput }}\n            type=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <div className={styles.errorContainer}>\n            {!!errors.email && (\n              <FormHelperText classes={{ root: styles.error }} error>\n                {errors.email}\n              </FormHelperText>\n            )}\n          </div>\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            classes={{ root: styles.CustomInput }}\n          />\n          <div className={styles.errorContainer}>\n            {/* {!!errors && ( */}\n            <FormHelperText\n              classes={{ root: styles.error }}\n              error\n            ></FormHelperText>\n            {/* )} */}\n          </div>\n          <TextField\n            type=\"password\"\n            name=\"password_confirm\"\n            label=\"Confirm password\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            classes={{ root: styles.CustomInput }}\n          />\n          <div className={styles.errorContainer}>\n            {!!errors.password && (\n              <FormHelperText classes={{ root: styles.error }} error>\n                {errors.password}\n              </FormHelperText>\n            )}\n          </div>\n          <Button\n            classes={{ root: styles.button }}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}