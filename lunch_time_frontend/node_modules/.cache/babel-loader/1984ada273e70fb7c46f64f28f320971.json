{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/AddLunchFormPage/AddLunchForm.js\";\nimport React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./AddLunchForm.module.css\";\nimport UserContext from \"../userContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nexport default function AddLunchForm() {\n  const userContext = useContext(UserContext);\n  const [soupsTable, setSoupsTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [soupsIndex, setSoupsIndex] = useState(0);\n  const [dishTable, setDishTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [dishIndex, setDishIndex] = useState(0);\n  const [drinksTable, setDrinksTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [drinksIndex, setDrinksIndex] = useState(0); // const [soupPrice, setSoupPrice] = useState();\n  // const [dishPrice, setDishPrice] = useState();\n  // const [drinkPrice, setDrinkPrice] = useState();\n  // const [setPrice, setSetPrice] = useState();\n  // const [setAndDrinkPrice, setSetAndDrinkPrice] = useState();\n\n  const [date, setDate] = useState();\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n  const [errors, setErrors] = useState(\"\");\n  const [errorsComponents, setErrorsComponents] = useState(\"\");\n  const [errorDish, setErrorDish] = useState(\"\");\n  const history = useHistory(); // const [firstOperationStatus, setFirstOperationStatus] = useState(404);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (dishTable[0] !== \"a\") {\n      setErrorDish(\"\");\n      fetch(\"http://localhost:4000/restaurant/addlunch/offert\", {\n        method: \"POST\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token\n        },\n        body: JSON.stringify({\n          email,\n          date\n        })\n      }).then(response => {\n        console.log('response status', response.status);\n\n        if (response.status === 201) {\n          console.log('DRUGI FETCH!');\n          fetch(\"http://localhost:4000/restaurant/addlunch/component\", {\n            method: \"POST\",\n            // *GET, POST, PUT, DELETE, etc.\n            mode: \"cors\",\n            cache: \"no-cache\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: userContext.user.token\n            },\n            body: JSON.stringify({\n              email,\n              soupsTable,\n              dishTable,\n              drinksTable\n            })\n          }).then(response => {\n            console.log(response.status);\n            return response.json();\n          }).then(json => {\n            setErrorsComponents(json);\n          }).catch(err => console.log(\"err\", err));\n        }\n\n        return response.json();\n      }).then(json => {\n        setErrors(json);\n        history.push('/afteraddlunch');\n      }).catch(err => console.log(\"err\", err));\n    } else {\n      setErrorDish(\"At least one dish is required!\");\n    }\n  }\n\n  const handleChange = event => {\n    if (event.target.name === \"soup\") {\n      soupsTable[soupsIndex] = event.target.value;\n      setSoupsTable(soupsTable);\n    } // if (event.target.name === \"soup_price\") {\n    //   setSoupPrice(event.target.value);\n    // }\n\n\n    if (event.target.name === \"dish\") {\n      dishTable[dishIndex] = event.target.value;\n      setDishTable(dishTable);\n    } // if (event.target.name === \"dish_price\") {\n    //   setDishPrice(event.target.value);\n    // }\n\n\n    if (event.target.name === \"drink\") {\n      drinksTable[drinksIndex] = event.target.value;\n      setDrinksTable(drinksTable);\n    } // if (event.target.name === \"drink_price\") {\n    //   setDrinkPrice(event.target.value);\n    // }\n    // if (event.target.name === \"set_price\") {\n    //   setSetPrice(event.target.value);\n    // }\n    // if (event.target.name === \"set_and_drink_price\") {\n    //   setSetAndDrinkPrice(event.target.value);\n    // }\n\n\n    if (event.target.name === \"date\") {\n      setDate(event.target.value);\n    }\n  };\n\n  const soupClick = event => {\n    if (event.target.name = \"soup\") {\n      if (soupsTable[soupsIndex] !== \"\" && soupsTable[0] !== \"a\") {\n        setSoupsIndex(soupsIndex + 1);\n      }\n    }\n  };\n\n  const dishClick = event => {\n    if (event.target.name = \"dish\") {\n      if (dishTable[dishIndex] !== \"\" && dishTable[0] !== \"a\") {\n        setDishIndex(dishIndex + 1);\n      }\n    }\n  };\n\n  const drinkClick = event => {\n    if (event.target.name = \"dish\") {\n      if (drinksTable[drinksIndex] !== \"\" && drinksTable[0] !== \"a\") {\n        setDrinksIndex(drinksIndex + 1);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BigContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Add lunch offert\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Soups\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), soupsTable.map((element, index) => index <= soupsIndex ? /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    classes: {\n      root: styles.CustomInputDish\n    },\n    name: \"soup\",\n    label: \"Soup\",\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: 4,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    name: \"soup\",\n    onClick: soupClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainerDish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Main dishes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), dishTable.map((element, index) => index <= dishIndex ? /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    classes: {\n      root: styles.CustomInputDish\n    },\n    name: \"dish\",\n    label: \"Dish\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    name: \"dish\",\n    onClick: dishClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"Drinks\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }), drinksTable.map((element, index) => index <= drinksIndex ? /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    classes: {\n      root: styles.CustomInputPrice\n    },\n    name: \"drink\",\n    label: \"Drink\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    classes: {\n      root: styles.PlusButton\n    },\n    size: \"small\",\n    name: \"drink\",\n    onClick: drinkClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    classes: {\n      root: styles.Icon\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BottomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.errorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, !!errors.message && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, errors.message), !!errorsComponents.message && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, errorsComponents.message), !!errorDish && /*#__PURE__*/React.createElement(FormHelperText, {\n    classes: {\n      root: styles.error\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, errorDish)), /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      root: styles.CustomInputPriceBottom\n    },\n    name: \"date\",\n    label: \"Date (DD/MM/RRRR)\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, \"Add your lunch\"))))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/AddLunchFormPage/AddLunchForm.js"],"names":["React","useEffect","useState","useContext","Fragment","styles","UserContext","TextField","FormHelperText","IconButton","AddIcon","Button","useHistory","AddLunchForm","userContext","soupsTable","setSoupsTable","soupsIndex","setSoupsIndex","dishTable","setDishTable","dishIndex","setDishIndex","drinksTable","setDrinksTable","drinksIndex","setDrinksIndex","date","setDate","email","setEmail","localStorage","getItem","errors","setErrors","errorsComponents","setErrorsComponents","errorDish","setErrorDish","history","handleSubmit","event","preventDefault","fetch","method","mode","cache","headers","Authorization","user","token","body","JSON","stringify","then","response","console","log","status","json","catch","err","push","handleChange","target","name","value","soupClick","dishClick","drinkClick","Login","box","BigContainer","title","container","smallerContainer","dishes","map","element","index","root","CustomInputDish","PlusButton","Icon","smallerContainerDish","CustomInputPrice","BottomContainer","errorContainer","message","error","CustomInputPriceBottom","button"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./AddLunchForm.module.css\";\nimport UserContext from \"../userContext\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormHelperText, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function AddLunchForm() {\n  const userContext = useContext(UserContext);\n  const [soupsTable, setSoupsTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [soupsIndex, setSoupsIndex] = useState(0);\n  const [dishTable, setDishTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [dishIndex, setDishIndex] = useState(0);\n  const [drinksTable, setDrinksTable] = useState([\"a\", \"\", \"\", \"\", \"\", \"\"]);\n  const [drinksIndex, setDrinksIndex] = useState(0);\n  // const [soupPrice, setSoupPrice] = useState();\n  // const [dishPrice, setDishPrice] = useState();\n  // const [drinkPrice, setDrinkPrice] = useState();\n  // const [setPrice, setSetPrice] = useState();\n  // const [setAndDrinkPrice, setSetAndDrinkPrice] = useState();\n  const [date, setDate] = useState();\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n  const [errors, setErrors] = useState(\"\");\n  const [errorsComponents, setErrorsComponents] = useState(\"\");\n  const [errorDish, setErrorDish] = useState(\"\");\n  const history = useHistory();\n  // const [firstOperationStatus, setFirstOperationStatus] = useState(404);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (dishTable[0] !== \"a\") {\n      setErrorDish(\"\");\n\n      fetch(\"http://localhost:4000/restaurant/addlunch/offert\", {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token,\n        },\n        body: JSON.stringify({\n          email,\n          date,\n        }),\n      })\n        .then((response) => {\n          console.log('response status', response.status);\n\n          if (response.status === 201) {\n            console.log('DRUGI FETCH!');\n            fetch(\"http://localhost:4000/restaurant/addlunch/component\", {\n              method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n              mode: \"cors\",\n              cache: \"no-cache\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: userContext.user.token,\n              },\n              body: JSON.stringify({\n                email,\n                soupsTable,\n                dishTable,\n                drinksTable,\n              }),\n            })\n              .then((response) => {\n                console.log(response.status);\n                return response.json();\n              })\n              .then((json) => {\n                setErrorsComponents(json);\n              })\n              .catch((err) => console.log(\"err\", err));\n          }\n\n          return response.json();\n        })\n        .then((json) => {\n          setErrors(json);\n          history.push('/afteraddlunch')\n        })\n        .catch((err) => console.log(\"err\", err));\n    } else {\n      setErrorDish(\"At least one dish is required!\");\n    }\n  }\n\n  const handleChange = (event) => {\n    if (event.target.name === \"soup\") {\n      soupsTable[soupsIndex] = event.target.value;\n      setSoupsTable(soupsTable);\n    }\n    // if (event.target.name === \"soup_price\") {\n    //   setSoupPrice(event.target.value);\n    // }\n    if (event.target.name === \"dish\") {\n      dishTable[dishIndex] = event.target.value;\n      setDishTable(dishTable);\n    }\n    // if (event.target.name === \"dish_price\") {\n    //   setDishPrice(event.target.value);\n    // }\n    if (event.target.name === \"drink\") {\n      drinksTable[drinksIndex] = event.target.value;\n      setDrinksTable(drinksTable);\n    }\n    // if (event.target.name === \"drink_price\") {\n    //   setDrinkPrice(event.target.value);\n    // }\n    // if (event.target.name === \"set_price\") {\n    //   setSetPrice(event.target.value);\n    // }\n    // if (event.target.name === \"set_and_drink_price\") {\n    //   setSetAndDrinkPrice(event.target.value);\n    // }\n    if (event.target.name === \"date\") {\n      setDate(event.target.value);\n    }\n  };\n\n  const soupClick = (event) => {\n    if ((event.target.name = \"soup\")) {\n      if (soupsTable[soupsIndex] !== \"\" && soupsTable[0] !== \"a\") {\n        setSoupsIndex(soupsIndex + 1);\n      }\n    }\n  };\n\n  const dishClick = (event) => {\n    if ((event.target.name = \"dish\")) {\n      if (dishTable[dishIndex] !== \"\" && dishTable[0] !== \"a\") {\n        setDishIndex(dishIndex + 1);\n      }\n    }\n  };\n\n  const drinkClick = (event) => {\n    if ((event.target.name = \"dish\")) {\n      if (drinksTable[drinksIndex] !== \"\" && drinksTable[0] !== \"a\") {\n        setDrinksIndex(drinksIndex + 1);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.Login}>\n      <div className={styles.box}>\n        <div className={styles.BigContainer}>\n          <h1 className={styles.title}>Add lunch offert</h1>\n\n          <form onSubmit={handleSubmit}>\n            <div className={styles.container}>\n              <div className={styles.smallerContainer}>\n                <h1 className={styles.dishes}>Soups</h1>\n                <br></br>\n                {/* <TextField\n                  classes={{ root: styles.CustomInputPrice }}\n                  name=\"soup_price\"\n                  label=\"Soup price\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onChange={handleChange}\n                /> */}\n                {soupsTable.map((element, index) =>\n                  index <= soupsIndex ? (\n                    <TextField\n                      key={index}\n                      classes={{ root: styles.CustomInputDish }}\n                      name=\"soup\"\n                      label=\"Soup\"\n                      variant=\"outlined\"\n                      multiline\n                      rowsMax={4}\n                      onChange={handleChange}\n                    />\n                  ) : (\n                    <Fragment></Fragment>\n                  )\n                )}\n                <div>\n                  <IconButton\n                    classes={{ root: styles.PlusButton }}\n                    size=\"small\"\n                    name=\"soup\"\n                    onClick={soupClick}\n                  >\n                    <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                  </IconButton>\n                </div>\n              </div>\n              <div className={styles.smallerContainerDish}>\n                <h1 className={styles.dishes}>Main dishes</h1>\n                <br></br>\n                {/* <TextField\n                  classes={{ root: styles.CustomInputPrice }}\n                  name=\"dish_price\"\n                  label=\"Main dish price\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onChange={handleChange}\n                /> */}\n                {dishTable.map((element, index) =>\n                  index <= dishIndex ? (\n                    <TextField\n                      key={index}\n                      classes={{ root: styles.CustomInputDish }}\n                      name=\"dish\"\n                      label=\"Dish\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                    />\n                  ) : (\n                    <Fragment></Fragment>\n                  )\n                )}\n                <div>\n                  <IconButton\n                    classes={{ root: styles.PlusButton }}\n                    size=\"small\"\n                    name=\"dish\"\n                    onClick={dishClick}\n                  >\n                    <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                  </IconButton>\n                </div>\n              </div>\n              <div className={styles.smallerContainer}>\n                <h1 className={styles.dishes}>Drinks</h1>\n                <br></br>\n                {/* <TextField\n                  classes={{ root: styles.CustomInputPrice }}\n                  name=\"drink_price\"\n                  label=\"Drink price\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onChange={handleChange}\n                /> */}\n                {drinksTable.map((element, index) =>\n                  index <= drinksIndex ? (\n                    <TextField\n                      key={index}\n                      classes={{ root: styles.CustomInputPrice }}\n                      name=\"drink\"\n                      label=\"Drink\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                    />\n                  ) : (\n                    <Fragment></Fragment>\n                  )\n                )}\n                <div>\n                  <IconButton\n                    classes={{ root: styles.PlusButton }}\n                    size=\"small\"\n                    name=\"drink\"\n                    onClick={drinkClick}\n                  >\n                    <AddIcon classes={{ root: styles.Icon }} color=\"primary\" />\n                  </IconButton>\n                </div>\n              </div>\n            </div>\n            <div className={styles.BottomContainer}>\n              <div className={styles.errorContainer}>\n                {!!errors.message && (\n                  <FormHelperText classes={{ root: styles.error }} error>\n                    {errors.message}\n                  </FormHelperText>\n                )}\n                {!!errorsComponents.message && (\n                  <FormHelperText classes={{ root: styles.error }} error>\n                    {errorsComponents.message}\n                  </FormHelperText>\n                )}\n                {!!errorDish && (\n                  <FormHelperText classes={{ root: styles.error }} error>\n                    {errorDish}\n                  </FormHelperText>\n                )}\n              </div>\n              <TextField\n                classes={{ root: styles.CustomInputPriceBottom }}\n                name=\"date\"\n                label=\"Date (DD/MM/RRRR)\"\n                variant=\"outlined\"\n                size=\"small\"\n                onChange={handleChange}\n              />\n              {/* <TextField\n                classes={{ root: styles.CustomInputPriceBottom }}\n                name=\"set_price\"\n                label=\"Set price\"\n                variant=\"outlined\"\n                size=\"small\"\n                onChange={handleChange}\n              />\n              <TextField\n                classes={{ root: styles.CustomInputPriceBottom }}\n                name=\"set_and_drink_price\"\n                label=\"Set with drink price\"\n                variant=\"outlined\"\n                size=\"small\"\n                onChange={handleChange}\n              /> */}\n              <Button\n                classes={{ root: styles.button }}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Add your lunch\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}