{"ast":null,"code":"var _jsxFileName = \"/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RestaurantOffertsPage/RestaurantOfferts.js\";\nimport React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./RestaurantOfferts.module.css\";\nimport UserContext from \"../userContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nexport default function RestaurantOfferts() {\n  const userContext = useContext(UserContext);\n  const [name, setName] = useState();\n  const [address, setAddress] = useState();\n  const [lunch_start_time, setLunch_start_time] = useState();\n  const [lunch_end_time, setLunch_end_time] = useState();\n  const [website_address, setWebsite_address] = useState();\n  const [offertsArray, setOffertsArray] = useState({});\n  const [soupPrice, setSoupPrice] = useState();\n  const [dishPrice, setDishPrice] = useState();\n  const [setPrice, setSetPrice] = useState();\n  const [setAndDrinkPrice, setSetAndDrinkPrice] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    fetchOfferts();\n  }, []);\n\n  const fetchOfferts = () => {\n    fetch(\"http://localhost:4000/restaurant/offerts\" + `?email=${userContext.user.email}`, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: userContext.user.token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      setOffertsArray(json.offertsArray);\n    }).catch(err => console.log(\"err\", err));\n  };\n\n  const newTable = Object.entries(offertsArray);\n  const datesTable = newTable.map((element, index) => element[0]);\n  let sortedDates = datesTable.sort((a, b) => a.split(\"/\").reverse().join().localeCompare(b.split(\"/\").reverse().join())).reverse();\n  const valuestable = newTable.map((element, index) => [element[1].map((e, i) => [e.type, e.name])]);\n  const tab = valuestable.map((e, i) => e[0]);\n  tab.map((element, index) => console.log(element[0]));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bigBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Restaurant\"), sortedDates.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Root,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: styles.Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    className: styles.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, element), tab[index].map((e, i) => e[0] === \"Soup\" ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    className: styles.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"soups: \", e[1]) : e[0] === \"Dish\" ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    key: i,\n    className: styles.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"dishes: \", e[1]) : e[0] === \"Drink\" ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    className: styles.Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"drinks: \", e[1]) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }))))))))));\n}","map":{"version":3,"sources":["/Users/antonina/Files/INZYNIERKA/lunch_time_frontend/src/RestaurantOffertsPage/RestaurantOfferts.js"],"names":["React","useEffect","useState","useContext","Fragment","styles","UserContext","useHistory","makeStyles","Grid","Paper","Typography","ButtonBase","RestaurantOfferts","userContext","name","setName","address","setAddress","lunch_start_time","setLunch_start_time","lunch_end_time","setLunch_end_time","website_address","setWebsite_address","offertsArray","setOffertsArray","soupPrice","setSoupPrice","dishPrice","setDishPrice","setPrice","setSetPrice","setAndDrinkPrice","setSetAndDrinkPrice","history","fetchOfferts","fetch","user","email","method","mode","cache","headers","Authorization","token","then","response","json","catch","err","console","log","newTable","Object","entries","datesTable","map","element","index","sortedDates","sort","a","b","split","reverse","join","localeCompare","valuestable","e","i","type","tab","bigBox","container","title","Root","Text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from \"react\";\nimport styles from \"./RestaurantOfferts.module.css\";\nimport UserContext from \"../userContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nexport default function RestaurantOfferts() {\n  const userContext = useContext(UserContext);\n  const [name, setName] = useState();\n  const [address, setAddress] = useState();\n  const [lunch_start_time, setLunch_start_time] = useState();\n  const [lunch_end_time, setLunch_end_time] = useState();\n  const [website_address, setWebsite_address] = useState();\n  const [offertsArray, setOffertsArray] = useState({});\n  const [soupPrice, setSoupPrice] = useState();\n  const [dishPrice, setDishPrice] = useState();\n  const [setPrice, setSetPrice] = useState();\n  const [setAndDrinkPrice, setSetAndDrinkPrice] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchOfferts();\n  }, []);\n\n  const fetchOfferts = () => {\n    fetch(\n      \"http://localhost:4000/restaurant/offerts\" +\n        `?email=${userContext.user.email}`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: userContext.user.token,\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setOffertsArray(json.offertsArray);\n      })\n      .catch((err) => console.log(\"err\", err));\n  };\n\n\n  const newTable = Object.entries(offertsArray);\n  const datesTable = newTable.map((element, index) => element[0]);\n  let sortedDates = datesTable\n    .sort((a, b) =>\n      a.split(\"/\").reverse().join().localeCompare(b.split(\"/\").reverse().join())\n    )\n    .reverse();\n\n  const valuestable = newTable.map((element, index) => [\n    element[1].map((e, i) => [e.type, e.name]),\n  ]);\n\n  const tab = valuestable.map((e, i) => e[0]);\n  tab.map((element, index) => console.log(element[0]));\n\n  return (\n    <div className={styles.bigBox}>\n      <div className={styles.container}>\n        <h1 className={styles.title}>Restaurant</h1>\n        {sortedDates.map(\n          (element, index) => (\n            <div className={styles.Root} key={index}>\n            <Paper className={styles.Paper}>\n              <Grid container spacing={2}>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <Typography gutterBottom variant=\"subtitle1\" className={styles.Text}>\n                      {element}\n                    </Typography>\n                    {tab[index].map((e, i) =>\n                      e[0] === \"Soup\" ? (\n                        <Typography variant=\"body2\" color=\"textSecondary\" className={styles.Text}>\n                          soups: {e[1]}\n                        </Typography>\n                      ) : e[0] === \"Dish\" ? (\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          key={i}\n                          className={styles.Text}\n                        >\n                          dishes: {e[1]}\n                        </Typography>\n                      ) : e[0] === \"Drink\" ? (\n                        <Typography variant=\"body2\" color=\"textSecondary\" className={styles.Text}>\n                          drinks: {e[1]}\n                        </Typography>\n                      ) : (\n                        <Fragment></Fragment>\n                      )\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </div>\n        ))}\n\n        {/* <a>name: </a>\n        <br></br>\n        <a>Data: </a>\n        <br></br>\n        <a>Soup price: </a>\n        <br></br>\n        <a>Dish price: </a>\n        <br></br>\n        <a>Drink price: </a>\n        <br></br>\n        <a>Set price:</a>\n        <br></br>\n        <a>Set and drink price: </a>\n        <br></br> */}\n\n        {/* {dateTable.map((elementDate, indexDate) => (\n          <Fragment key={indexDate}>\n            <a>Data: {elementDate}</a>\n            <a>Soups:</a>\n            <br></br>\n            {soupTable.map((elementSoup, indexSoup) => (\n              <Fragment key={indexSoup}>\n                <a>{elementSoup}</a>\n                <br></br>\n              </Fragment>\n            ))}\n            <a>Dishes:</a>\n            <br></br>\n            {dishTable.map((elementDish, indexDish) => (\n              <Fragment key={indexDish}>\n                <a>{elementDish}</a>\n                <br></br>\n              </Fragment>\n            ))}\n            <a>Drinks:</a>\n            <br></br>\n            {drinkTable.map((elementDrink, indexDrink) => (\n              <Fragment key={indexDrink}>\n                <a>{elementDrink}</a>\n                <br></br>\n              </Fragment>\n            ))}\n          </Fragment> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}